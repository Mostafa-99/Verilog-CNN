//test bench for tanh
`timescale 1ns / 1ps
module tanh_tb;

parameter EXPONENT_WIDTH = 5;
parameter MANTISSA_WIDTH = 10;
parameter DATA_WIDTH = EXPONENT_WIDTH+MANTISSA_WIDTH+1;
reg reset;
reg [DATA_WIDTH-1:0] input_value;
reg clock;
wire [DATA_WIDTH-1:0] output_value;

initial
begin
clock =1;
reset=0;
// x=50
//-------------------------------------------
input_value = 16'b0101001001000000;
reset=1;
#2 reset=0;
//-------------------------------------------
//  x=1
//-------------------------------------------
#16 input_value = 16'b0011110000000000;
reset=1;
#2 reset=0;
//-------------------------------------------
//  x=0.75
//-------------------------------------------
#16 input_value = 16'b0011101000000000;
reset=1;
#2 reset=0;
//-------------------------------------------
//  x=0.5
//-------------------------------------------
#16 input_value = 16'b0011100000000000;
reset=1;
#2 reset=0;
//-------------------------------------------
//  x=0.1
//-------------------------------------------
#16 input_value = 16'b0010111001100110;
reset=1;
#2 reset=0;
//-------------------------------------------
//  x=0.01
//-------------------------------------------
#16 input_value = 16'b0010000100011111;
reset=1;
#2 reset=0;
//-------------------------------------------
//  x=0
//-------------------------------------------
#16 input_value = 16'b0000000000000000;
reset=1;
#2 reset=0;
//-------------------------------------------
//  x=-0.01
//-------------------------------------------
#16 input_value = 16'b1010000100011111;
reset=1;
#2 reset=0;
//-------------------------------------------
//  x=-0.1
//-------------------------------------------
#16 input_value = 16'b1010111001100110;
reset=1;
#2 reset=0;
//-------------------------------------------
//  x=-0.5
//-------------------------------------------
#16 input_value = 16'b1011100000000000;
reset=1;
#2 reset=0;
//-------------------------------------------
//  x=-0.75
//-------------------------------------------
#16 input_value = 16'b1011101000000000;
reset=1;
#2 reset=0;
//-------------------------------------------
//  x=-1
//-------------------------------------------
#16 input_value = 16'b1011110000000000;
reset=1;
#2 reset=0;
//-------------------------------------------
// x=-50
//-------------------------------------------
#16 input_value = 16'b1101001001000000;
reset=1;
#2 reset=0;
//-------------------------------------------
#31 $stop;
end


always begin
     #1  clock = ~clock; 
    end
        
//instantiate the module into the test bench
tanh #(.EXPONENT_WIDTH(EXPONENT_WIDTH), .MANTISSA_WIDTH(MANTISSA_WIDTH), .DATA_WIDTH(DATA_WIDTH)) inst1 (
.input_x(input_value),
.clk(clock),
.reset(reset),
.output_tanh(output_value)
);
endmodule

